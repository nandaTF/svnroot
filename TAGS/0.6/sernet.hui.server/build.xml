<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="help" name="sernet.hui.server">

    <property file="build.properties"/>
    <property name="build.home" value="${basedir}/build"/>
    <property name="build.classes.home" value="${build.home}/classes"/>
    <property name="build.war.home" value="${build.home}/war"/>
	<property name="jaxws.lib.home" value="${JAXWS_HOME}\lib"/>
	
    <path id="jaxws.classpath">
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <fileset dir="${jaxws.lib.home}">
            <include name="*.jar"/>            
        </fileset>    	
    </path>
	
	<path id="client.classpath">
		<path refid="jaxws.classpath"/>
		<pathelement location="${build.classes.home}"/>
		<pathelement location="${basedir}/etc"/>		
	</path>

    <taskdef name="apt" classname="com.sun.tools.ws.ant.Apt">
        <classpath refid="jaxws.classpath"/>
    </taskdef>

    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
        <classpath refid="jaxws.classpath"/>
    </taskdef>


    <target name="setup">
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.classes.home}"/>
        <mkdir dir="${build.war.home}"/>
    </target>

    <target name="build-server-java" depends="setup">
        <apt
                fork="true"
                debug="${debug}"
                verbose="${verbose}"
                destdir="${build.classes.home}"
                sourcedestdir="${build.classes.home}"
                sourcepath="${basedir}/src">
            <classpath>
                <path refid="jaxws.classpath"/>
                <pathelement location="${basedir}/src"/>
            </classpath>
            <option key="r" value="${build.home}"/>
            <source dir="${basedir}/src">
                <include name="**/server/*.java"/>
            </source>
        </apt>        
    </target>

    <target name="clean">
        <delete dir="${build.home}" includeEmptyDirs="true"/>    	
    </target>
	
    <target name="create-war">
        <war warfile="${build.war.home}/${ant.project.name}.war" webxml="etc/web.xml">
            <webinf dir="${basedir}/etc" includes="sun-jaxws.xml"/>
            <classes dir="${build.classes.home}"/>
        </war>
    </target>
	
	<target name="deploy">
	        <copy file="${build.war.home}/${ant.project.name}.war"
	              todir="${CATALINE_HOME}/webapps"/>
	</target>
	
	<target name="undeploy">
		<delete file="${CATALINE_HOME}/webapps/${ant.project.name}.war"/>
	</target>		


	<target name="clean-client">
	   	<delete includeEmptyDirs="true">
			<fileset dir="${build.classes.home}" includes="**/client/*.*"/>
	   	</delete>
	</target>

    <target name="generate-client-async" depends="setup">
        <wsimport
                debug="${debug}"
                verbose="${verbose}"
                keep="${keep}"
                extension="${extension}"
                destdir="${build.classes.home}"
                wsdl="${client.wsdl}">
        	<binding dir="${basedir}/etc" includes="${schema.binding}"/>	
        	<binding dir="${basedir}/etc" includes="${client.binding.async}"/>
        </wsimport>
    </target>

	<target name="compile-client-async">
			        <javac
			                fork="true"
			                srcdir="${basedir}/src"
			                destdir="${build.classes.home}"
			                includes="**/StockQuoteClientAsync.java">
			            <classpath refid="jaxws.classpath"/>
			        </javac>
	</target>	
	
    <target name="server" depends="setup">

        <antcall target="clean"/>

        <antcall target="build-server-java"/>

        <antcall target="create-war"/>

        <antcall target="deploy"/>
    </target>
		
	<target name="client-async" depends="setup">

		        <antcall target="clean-client"/>

		        <antcall target="generate-client-async"/>

		        <antcall target="compile-client-async"/>

	 </target>
	
	<target name="run-async" depends="client-async">
	        <java fork="true" classname="${client-async}">
	            <classpath refid="client.classpath"/>
	        </java>
	</target>
	
	<target name="help">
	        <echo message="server:       Builds and deploy the service endpoint WAR"/>
	      	<echo message="client-async: Builds the client with asynchronous invocation enabled"/>
	    	<echo message="run-async:    Runs the asynchronous invocation client"/>
	</target>

</project>
