<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- 

All of the Spring vodoo goes on in here. 

This variant:
	Wiring for direct database access using hibernate from the RCP client.

IST NICHT FÜR DER GEFINGERPOKEN UND MITTENGRABEN! ODERWISE IST EASY TO SCHNAPPEN DER SPRINGENWERK,
BLOWENFUSEN UND POPPENCORKEN MIT SPITZENSPARKSEN.
IST NICHT FÜR GEWERKEN BEI DUMMKOPFEN. DER RUBBERNECKEN SIGHTSEEREN KEEPEN DAS COTTONPICKEN 
HÄNDER IN DAS POCKETS MUSS.
ZO RELAXEN UND WATSCHEN DER BLINKENLIGHTS.

-->

<beans>
   <!-- 
    <bean id="veriniceDAOServiceHttpInvoker"
          class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl">
            <value>
                http://localhost:8080/verinice/service/veriniceDAOServiceHttpInvoker
            </value>
        </property>
        <property name="serviceInterface">
            <value>sernet.gs.server.VeriniceDAOService</value>
        </property>
    </bean>
	-->

	<!-- Instance of generic hibernate DAO for class Property -->  
	<bean id="propertyDao" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
		<constructor-arg>
			<value>sernet.hui.common.connect.Property</value>
		</constructor-arg>
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Instance of generic hibernate DAO for class Entity -->  
	<bean id="entityDao" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
		<constructor-arg>
			<value>sernet.hui.common.connect.Entity</value>
		</constructor-arg>
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
<bean id="anwendungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Anwendung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="bausteinUmsetzungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.BausteinUmsetzung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="bSIModelDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.BSIModel</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="clientDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Client</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="clientsKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.ClientsKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="datenverarbeitungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.Datenverarbeitung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="finishedRiskAnalysisDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.risikoanalyse.model.FinishedRiskAnalysis</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="gebaeudeDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Gebaeude</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="gebaeudeKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.GebaeudeKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="gefaehrdungsUmsetzungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.risikoanalyse.model.GefaehrdungsUmsetzung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="iTVerbundDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.ITVerbund</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="massnahmenUmsetzungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.MassnahmenUmsetzung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="netzKomponenteDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.NetzKomponente</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="nKKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.NKKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="personDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Person</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="personengruppenDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.Personengruppen</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="personenKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.PersonenKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="raeumeKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.RaeumeKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="raumDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Raum</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="serverDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.Server</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="serverKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.ServerKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="sonstigeITKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.SonstigeITKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="sonstITDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.SonstIT</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="stellungnahmeDSBDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.StellungnahmeDSB</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="telefonKomponenteDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.TelefonKomponente</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="tKKategorieDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.model.TKKategorie</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="verantwortlicheStelleDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.VerantwortlicheStelle</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="verarbeitungsangabenDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.Verarbeitungsangaben</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="zweckbestimmungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.ds.model.Zweckbestimmung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


<bean id="risikoMassnahmeDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.risikoanalyse.model.RisikoMassnahme</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>

<bean id="ownGefaehrdungDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.risikoanalyse.model.OwnGefaehrdung</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>



	<bean id="cnaLinkDao" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
		<constructor-arg>
			<value>sernet.gs.ui.rcp.main.common.model.CnALink</value>
		</constructor-arg>
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>


<bean id="finishedRiskAnalysisListsDAO" class="sernet.gs.ui.rcp.main.connect.HibernateBaseDao">
    <constructor-arg>
        <value>sernet.gs.ui.rcp.main.bsi.risikoanalyse.model.FinishedRiskAnalysisLists</value>
    </constructor-arg>
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>


	<!-- Use existing hibernate config for session -->  
	<bean class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" id="sessionFactory">
	  <property name="configLocation">
	    <value>{hibernatecfg}</value>
	  </property>
	</bean>

	<!-- Intercepts calls opening and closing hibernate session during method execution. -->
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
		
	<bean id="daoFactory" class="sernet.gs.ui.rcp.main.service.DAOFactory">
		<property name="propertyDao" ref="propertyDao"/>
	  	<property name="entityDao" ref="entityDao"/>
	  	<property name="cnaLinkDao" ref="cnaLinkDao"/>
	  	<property name="finishedRiskAnalysisListsDAO" ref="finishedRiskAnalysisListsDAO"/>

		<!-- DAOs for subclasses of CnATreeElement: -->	  	
	  	<property name="anwendungDAO" ref="anwendungDAO"/>
		<property name="bausteinUmsetzungDAO" ref="bausteinUmsetzungDAO"/>
		<property name="bSIModelDAO" ref="bSIModelDAO"/>
		<property name="clientDAO" ref="clientDAO"/>
		<property name="clientsKategorieDAO" ref="clientsKategorieDAO"/>
		<property name="datenverarbeitungDAO" ref="datenverarbeitungDAO"/>
		<property name="finishedRiskAnalysisDAO" ref="finishedRiskAnalysisDAO"/>
		<property name="gebaeudeDAO" ref="gebaeudeDAO"/>
		<property name="gebaeudeKategorieDAO" ref="gebaeudeKategorieDAO"/>
		<property name="gefaehrdungsUmsetzungDAO" ref="gefaehrdungsUmsetzungDAO"/>
		<property name="iTVerbundDAO" ref="iTVerbundDAO"/>
		<property name="massnahmenUmsetzungDAO" ref="massnahmenUmsetzungDAO"/>
		<property name="netzKomponenteDAO" ref="netzKomponenteDAO"/>
		<property name="nKKategorieDAO" ref="nKKategorieDAO"/>
		<property name="personDAO" ref="personDAO"/>
		<property name="personengruppenDAO" ref="personengruppenDAO"/>
		<property name="personenKategorieDAO" ref="personenKategorieDAO"/>
		<property name="raeumeKategorieDAO" ref="raeumeKategorieDAO"/>
		<property name="raumDAO" ref="raumDAO"/>
		<property name="serverDAO" ref="serverDAO"/>
		<property name="serverKategorieDAO" ref="serverKategorieDAO"/>
		<property name="sonstigeITKategorieDAO" ref="sonstigeITKategorieDAO"/>
		<property name="sonstITDAO" ref="sonstITDAO"/>
		<property name="stellungnahmeDSBDAO" ref="stellungnahmeDSBDAO"/>
		<property name="telefonKomponenteDAO" ref="telefonKomponenteDAO"/>
		<property name="tKKategorieDAO" ref="tKKategorieDAO"/>
		<property name="verantwortlicheStelleDAO" ref="verantwortlicheStelleDAO"/>
		<property name="verarbeitungsangabenDAO" ref="verarbeitungsangabenDAO"/>
		<property name="zweckbestimmungDAO" ref="zweckbestimmungDAO"/>
		<property name="risikoMassnahmeDAO" ref="risikoMassnahmeDAO"/>
		<property name="ownGefaehrdungDAO" ref="ownGefaehrdungDAO"/>
	  
  	</bean>
  	
  	<!-- Proxied using hibernate interceptor -->
	<bean id="commandServiceTarget" class="sernet.gs.ui.rcp.main.service.HibernateCommandService">
		<property name="daoFactory" ref="daoFactory"/>
	</bean>
	
	<!-- Interceptor to keep hibernate session open during business method -->
	<bean id="commandService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target"><ref bean="commandServiceTarget"/></property>
		<property name="proxyInterfaces">
			<value>sernet.gs.ui.rcp.main.service.ICommandService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean> 
    
</beans>