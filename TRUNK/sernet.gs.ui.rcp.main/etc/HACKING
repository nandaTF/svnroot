last modified: 2009-08-11 Robert Schuster <r.schuster@tarent.de>

(not yet finished)

This document describes how to set up verinice for development. It assumes
that you are using Eclipse and are familiar with this IDE.

Software requirements:
  - Subversion client
  - Eclipse IDE (3.4.2 and higher recommended)
  - Subversion Eclipse Plugin (SVN support, http://www.eclipse.org/subversive )
  - Apache Tomcat 5.5.x
  - PostgreSQL (8.3/8.4 is ok, optional but strongly recommended)

Subversion setup:
-----------------
 - install a terminal-based subversion client through your distribution's
   package manager

Apache Tomcat:
--------------
  - get a recent release of Apache Tomcat 5.5 and unpack the tar.gz file
    somewhere (note where this is, we need it at a later point)
  - Tomcat 5.5 is available from: http://tomcat.apache.org/download-55.cgi

PostgreSQL:
-----------
  - install the latest stable version through your distributions'
    package manager

Eclipse IDE:
------------
  - install the Subversive plugin (Subversive SVN Team provider) and the
    appropriate connector
    - NOTE: Even if you use Eclipse Ganymede (3.4.x) use the *latest* release
      of the Subversion plugin. If the website does not tell otherwise add
      these update sites:
      * http://download.eclipse.org/technology/subversive/0.7/update-site/
      * http://www.polarion.org/projects/subversive/download/eclipse/2.0/update-site/
  - install the Java Plugin Developer Tools and Java EE Developer Tools
    (if not already part of your Eclipse installation)
  - Eclipse 3.5: additionally install 'JST Server Adapters'
  - go to Window/Preferences/Server/Runtime Environment and add a Tomcat 5.5
    environment by pointing at the directory where you unpacked Apache Tomcat
  - use the svn repository explorer and add the repository
    http://www.verinice.org/svnroot
    (you can specify TRUNK, BRANCHES and TAGS as the respective trunk, branches
     and tags folder)
  - you may get problems with Java Heap Space while checking out sernet.gs.ui.rcp.main
    for this reason, and even just to have more resources you can edit the eclipse.ini
    and change the default values for maximum heap size, by adding '-Xmx1024m'. This
    change requires a restart of the IDE
  - check out the following projects from trunk:
  
  	sernet.gs.antlr.fragment
  	sernet.gs.db.fragment
  	sernet.gs.ehcache.fragment
	sernet.gs.hibernate.fragment
	sernet.gs.log4j.fragment
	sernet.gs.reveng
	sernet.gs.server
	sernet.gs.server.feature
	sernet.gs.service
	sernet.gs.springweb.fragment
	sernet.gs.ui.rcp.main
	sernet.gs.ui.rcp.main.feature
	sernet.hui.common
	sernet.hui.server
	sernet.hui.swtclient
	sernet.springclient

  - close all projects (important)
  - create a directory and unpack the files
	etc/TargetEnvironment-0.7.0/eclipse-3.4.1-rcp-sdk.tar.bz2
	etc/TargetEnvironment-0.7.0/additional.tar.bz2
     which can be found inside the gs.ui.rcp.main project
  - Eclipse 3.4:
    - go to Window/Preferences/Plug-In Development/Target Platform/Plug-Ins
    - click on browse and chose 'eclipse-3.4.1-rcp-sdk/eclipse/plugins'
      inside the directory where you unpacked the eclipse-3.4.1-rcp-sdk
      tarball
    - click on 'Add' and add the 'additional' directory
  - Eclipse 3.5:
    - add a new target platform
    - specify 'eclipse-3.4.1-rcp-sdk/eclipse/plugins' and 'additional' as
      directories to look for plugins
  - open all projects, do a refresh on all projects
  - if eclipse mentions problems with the compiler level, follow the quick
    fix to set the version to 1.5
  - if eclipse mentions 'This projects needs to update WTP data' you simply do 
    right click on 'sernet.hui.server' and chose validate
 - if spurious classpath errors occur you just right-click on a project and chose 
   'PDE Tools/Update classpath ...'.
  - open the 'Servers' view (Window/Show View/Others...)
    - do a right-click and chose 'New/Server'
    - chose Tomcat 5.5
    - add the sernet.gs.sever project
  - download the catalogues IT-Grundschutz and the Datenschutzbaustein
    and place both files into the WebContent/WEB-INF directory of the
    sernet.gs.server project (do a refresh in Eclipse for that project)
    The catalogues can be found on this page:
    https://www.bsi.bund.de/cln_155/DE/Themen/weitereThemen/ITGrundschutzKataloge/Download/download_node.html
  - edit WebContent/WEB-INF/veriniceserver-plain.properties and add your
    database settings (if you followed the advice to call the db verinicedb,
    have PostgreSQL running on port 5432 and used verinice as user/password
    then nothing needs to be configured)
  - create a run configuration ('Eclipse Application') based on the file
    oc.product of the project sernet.gs.ui.rcp.main
    - open the run configuration dialog
    - if it is not checked, manually add: sernet.gs.server
    - click on 'Add Required Plug-ins'
    - click on apply and then validate to check whether there are really
      no missing bundles

As of now you can:
  - start the standalone (no-OSGI) verinice server by starting Tomcat
    from Eclipse
  - start the verinice client (oc.product) which automatically starts an
    internal server on port 8800 when configured for the standalone
    mode
